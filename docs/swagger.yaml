basePath: /api/v1
definitions:
  dto.AssignLeaderRequest:
    properties:
      leader:
        $ref: '#/definitions/dto.LeaderInfo'
    required:
      - leader
    type: object
  dto.LeaderInfo:
    properties:
      domain:
        minLength: 1
        type: string
      id:
        type: integer
    type: object
  http.DepartmentCreateRequest:
    properties:
      business_unit_id:
        type: integer
      full_name:
        type: string
      group_department_id:
        type: integer
      leader_id:
        type: integer
      shortname:
        type: string
    type: object
  http.StarterCreateRequest:
    properties:
      department_id:
        type: integer
      domain:
        type: string
      email:
        type: string
      job_title:
        type: string
      line_manager_id:
        type: integer
      mobile:
        type: string
      name:
        type: string
      work_phone:
        type: string
    type: object
  http.StarterUpdateRequest:
    properties:
      department_id:
        type: integer
      email:
        type: string
      job_title:
        type: string
      line_manager_id:
        type: integer
      mobile:
        type: string
      name:
        type: string
      work_phone:
        type: string
    type: object
  response.APIResponse:
    properties:
      code:
        type: integer
      data:
        description: data return null not show
      error:
        description: Error return null not show
      message:
        type: string
    type: object
info:
  contact: { }
  description: REST APIs for managing starters and organizational resources.
  title: Starter Service API
  version: "1.0"
paths:
  /business-units:
    get:
      consumes:
        - application/json
      description: Returns a paginated list of business units.
      parameters:
        - description: Page number (default 1)
          in: query
          name: page
          type: integer
        - description: Items per page (default 10)
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: List business units
      tags:
        - Business Units
  /business-units/{id}:
    get:
      consumes:
        - application/json
      description: Retrieves business unit information by identifier.
      parameters:
        - description: Business unit ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Get business unit detail
      tags:
        - Business Units
  /departments:
    get:
      consumes:
        - application/json
      description: Returns a paginated list of departments, optionally filtered by
        business unit.
      parameters:
        - description: Filter by business unit ID
          in: query
          name: business_unit_id
          type: integer
        - description: Page number (default 1)
          in: query
          name: page
          type: integer
        - description: Items per page (default 10)
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: List departments
      tags:
        - Departments
    post:
      consumes:
        - application/json
      description: Creates a new department within a business unit.
      parameters:
        - description: Department payload
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/http.DepartmentCreateRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Create department
      tags:
        - Departments
  /departments/{id}:
    get:
      consumes:
        - application/json
      description: Retrieves department information by identifier.
      parameters:
        - description: Department ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Get department detail
      tags:
        - Departments
  /departments/{id}/leader:
    patch:
      consumes:
        - application/json
      description: Assigns a leader to a department using either ID or domain (but
        not both).
      parameters:
        - description: Department ID
          in: path
          name: id
          required: true
          type: integer
        - description: Leader assignment payload
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/dto.AssignLeaderRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Assign leader to department
      tags:
        - Departments
  /starters:
    get:
      consumes:
        - application/json
      description: Returns a paginated list of starters with optional filters and
        sorting.
      parameters:
        - description: Keyword to search by domain, name, or email
          in: query
          name: q
          type: string
        - description: Filter by business unit ID
          in: query
          name: business_unit_id
          type: integer
        - description: Filter by department ID
          in: query
          name: department_id
          type: integer
        - description: Sort field
          enum:
            - id
            - name
            - domain
            - business_unit_id
            - department_id
            - created_at
            - updated_at
          in: query
          name: sort_by
          type: string
        - description: Sort order
          enum:
            - asc
            - desc
          in: query
          name: sort_order
          type: string
        - description: Page number (default 1)
          in: query
          name: page
          type: integer
        - description: Items per page (default 20)
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: List starters
      tags:
        - Starters
    post:
      consumes:
        - application/json
      description: Creates a new starter record.
      parameters:
        - description: Starter payload
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/http.StarterCreateRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Create a starter
      tags:
        - Starters
  /starters/{domain}:
    delete:
      consumes:
        - application/json
      description: Soft deletes a starter by domain.
      parameters:
        - description: Starter domain
          in: path
          name: domain
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Soft delete starter
      tags:
        - Starters
    get:
      consumes:
        - application/json
      description: Retrieves starter information by domain.
      parameters:
        - description: Starter domain
          in: path
          name: domain
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Get starter detail
      tags:
        - Starters
    patch:
      consumes:
        - application/json
      description: Partially updates starter information by domain.
      parameters:
        - description: Starter domain
          in: path
          name: domain
          required: true
          type: string
        - description: Starter attributes to update
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/http.StarterUpdateRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Update starter
      tags:
        - Starters
swagger: "2.0"
