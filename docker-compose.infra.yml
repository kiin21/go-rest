services:
  mysql:
    image: mysql:8.0
    container_name: vng-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: intern_app
      MYSQL_USER: gouser
      MYSQL_PASSWORD: gopassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./services/starter-service/migrations:/docker-entrypoint-initdb.d
    networks:
      - vng-network

  mongodb:
    image: mongo:8.0
    container_name: vng-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: notifications_user
      MONGO_INITDB_ROOT_PASSWORD: notifications_pass
      MONGO_INITDB_DATABASE: notifications
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - vng-network

  mongo-express:
    image: mongo-express:latest
    container_name: vng-mongo-express
    ports:
      - "8386:8081"
    environment:
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
      ME_CONFIG_MONGODB_URL: mongodb://notifications_user:notifications_pass@vng-mongodb:27017/?authSource=admin
    networks:
      - vng-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: vng-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - vng-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: vng-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - vng-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: vng-messagequeue
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"   # INTERNAL
      - "9093:9093"   # EXTERNAL
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://vng-messagequeue:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - vng-network


  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: vng-messagequeue:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/kafdrop"
    ports:
      - "9000:9000"
    networks:
      - vng-network
    depends_on:
      - kafka

volumes:
  mysql_data:
  mongodb_data:
  elasticsearch_data:

networks:
  vng-network:
    driver: bridge
