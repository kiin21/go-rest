basePath: /api/v1
definitions:
  department.AssignLeaderRequest:
    properties:
      leader:
        $ref: '#/definitions/department.LeaderInfo'
    required:
    - leader
    type: object
  department.CreateDepartmentRequest:
    properties:
      business_unit_id:
        type: integer
      full_name:
        maxLength: 255
        minLength: 3
        type: string
      group_department_id:
        type: integer
      leader_id:
        type: integer
      shortname:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - full_name
    - shortname
    type: object
  department.LeaderInfo:
    properties:
      domain:
        minLength: 1
        type: string
      id:
        type: integer
    type: object
  department.UpdateDepartmentRequest:
    properties:
      business_unit_id:
        type: integer
      full_name:
        maxLength: 255
        minLength: 3
        type: string
      group_department_id:
        type: integer
      leader_id:
        type: integer
      shortname:
        maxLength: 100
        minLength: 2
        type: string
    type: object
  httputil.APIResponse:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
info:
  contact: {}
  description: REST APIs for managing starters and organizations.
  title: Starter Service API
  version: "1.0"
paths:
  /organization/business-units:
    get:
      consumes:
      - application/json
      description: Retrieve business units with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: List business units
      tags:
      - Business Units
  /organization/business-units/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a business unit with nested details by ID
      parameters:
      - description: Business unit ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Get business unit detail
      tags:
      - Business Units
  /organization/departments:
    get:
      consumes:
      - application/json
      description: Retrieve departments with optional business unit filter and pagination
      parameters:
      - description: Filter by business unit ID
        in: query
        minimum: 1
        name: business_unit_id
        type: integer
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: List departments
      tags:
      - Departments
    post:
      consumes:
      - application/json
      description: Create a new department
      parameters:
      - description: Department payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/department.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Create department
      tags:
      - Departments
  /organization/departments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a department by ID
      parameters:
      - description: Department ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Delete department
      tags:
      - Departments
    get:
      consumes:
      - application/json
      description: Retrieve a department with nested details by ID
      parameters:
      - description: Department ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Get department detail
      tags:
      - Departments
    patch:
      consumes:
      - application/json
      description: Update department information by ID
      parameters:
      - description: Department ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/department.UpdateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Update department
      tags:
      - Departments
  /organization/departments/{id}/leader:
    patch:
      consumes:
      - application/json
      description: Assign or update the leader of a department
      parameters:
      - description: Department ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Leader assignment payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/department.AssignLeaderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.APIResponse'
      summary: Assign department leader
      tags:
      - Departments
swagger: "2.0"
