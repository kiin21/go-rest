// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/business-units": {
            "get": {
                "description": "Retrieve business units with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Business Units"
                ],
                "summary": "List business units",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/businessunit.BusinessUnitListAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/business-units/{id}": {
            "get": {
                "description": "Retrieve a business unit with nested details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Business Units"
                ],
                "summary": "Get business unit detail",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Business unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/businessunit.BusinessUnitDetailAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "description": "Retrieve departments with optional business unit filter and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "List departments",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Filter by business unit ID",
                        "name": "business_unit_id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentListAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Create department",
                "parameters": [
                    {
                        "description": "Department payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/department.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentDetailAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "get": {
                "description": "Retrieve a department with nested details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get department detail",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentDetailAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a department by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Delete department",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentDeleteAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update department information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Update department",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/department.UpdateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentDetailAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/departments/{id}/leader": {
            "patch": {
                "description": "Assign or update the leader of a department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Assign department leader",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Leader assignment payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/department.AssignLeaderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/department.DepartmentDetailAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/starters": {
            "get": {
                "description": "Retrieve starters with optional search and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Starters"
                ],
                "summary": "List starters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword search",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "fullname",
                            "domain",
                            "dept_name",
                            "bu_name"
                        ],
                        "type": "string",
                        "description": "Search field",
                        "name": "search_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "domain",
                            "created_at"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/starter.StarterListAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new starter record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Starters"
                ],
                "summary": "Create starter",
                "parameters": [
                    {
                        "description": "Starter payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/starter.CreateStarterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/starter.StarterAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        },
        "/starters/{domain}": {
            "get": {
                "description": "Retrieve a starter by domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Starters"
                ],
                "summary": "Get starter detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Starter domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/starter.StarterAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Soft delete a starter by domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Starters"
                ],
                "summary": "Delete starter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Starter domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/starter.StarterDeleteAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update a starter by domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Starters"
                ],
                "summary": "Update starter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Starter domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/starter.UpdateStarterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/starter.StarterAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/shared.GenericAPIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "businessunit.BusinessUnitDetailAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/businessunit.BusinessUnitDetailResponse"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "businessunit.BusinessUnitDetailResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/shared.CompanyNested"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leader": {
                    "$ref": "#/definitions/shared.LineManagerNested"
                },
                "name": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "businessunit.BusinessUnitListAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/businessunit.BusinessUnitListAPIResponseData"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "businessunit.BusinessUnitListAPIResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/businessunit.BusinessUnitDetailResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/httputil.RespPagination"
                }
            }
        },
        "department.AssignLeaderRequest": {
            "type": "object",
            "required": [
                "leader"
            ],
            "properties": {
                "leader": {
                    "$ref": "#/definitions/department.LeaderInfo"
                }
            }
        },
        "department.CreateDepartmentRequest": {
            "type": "object",
            "required": [
                "full_name",
                "shortname"
            ],
            "properties": {
                "business_unit_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "group_department_id": {
                    "type": "integer"
                },
                "leader_id": {
                    "type": "integer"
                },
                "shortname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "department.DepartmentDeleteAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/department.DepartmentDeleteResponseData"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "department.DepartmentDeleteResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "department.DepartmentDetailAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/department.DepartmentDetailResponse"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "department.DepartmentDetailResponse": {
            "type": "object",
            "properties": {
                "business_unit": {
                    "$ref": "#/definitions/shared.BusinessUnitNested"
                },
                "created_at": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leader": {
                    "$ref": "#/definitions/shared.LineManagerNested"
                },
                "parent_department": {
                    "$ref": "#/definitions/shared.DepartmentNested"
                },
                "shortname": {
                    "type": "string"
                },
                "sub_departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shared.DepartmentNested"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "department.DepartmentListAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/department.DepartmentListAPIResponseData"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "department.DepartmentListAPIResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/department.DepartmentDetailResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/httputil.RespPagination"
                }
            }
        },
        "department.LeaderInfo": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "department.UpdateDepartmentRequest": {
            "type": "object",
            "properties": {
                "business_unit_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "group_department_id": {
                    "type": "integer"
                },
                "leader_id": {
                    "type": "integer"
                },
                "shortname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "httputil.RespPagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                },
                "total_items": {
                    "type": "integer"
                }
            }
        },
        "shared.BusinessUnitNested": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                }
            }
        },
        "shared.CompanyNested": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "shared.DepartmentNested": {
            "type": "object",
            "properties": {
                "group_department": {
                    "$ref": "#/definitions/shared.GroupDepartmentNested"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                }
            }
        },
        "shared.GenericAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "shared.GroupDepartmentNested": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                }
            }
        },
        "shared.LineManagerNested": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_title": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "starter.CreateStarterRequest": {
            "type": "object",
            "required": [
                "department_id",
                "domain",
                "email",
                "job_title",
                "mobile",
                "name",
                "work_phone"
            ],
            "properties": {
                "department_id": {
                    "type": "integer"
                },
                "domain": {
                    "type": "string",
                    "maxLength": 25,
                    "minLength": 3
                },
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "job_title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "line_manager_id": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "work_phone": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "starter.StarterAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/starter.StarterResponse"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "starter.StarterDeleteAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/starter.StarterDeleteResponseData"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "starter.StarterDeleteResponseData": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "starter.StarterListAPIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/starter.StarterListAPIResponseData"
                },
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "starter.StarterListAPIResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starter.StarterResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/httputil.RespPagination"
                }
            }
        },
        "starter.StarterResponse": {
            "type": "object",
            "properties": {
                "business_unit": {
                    "$ref": "#/definitions/shared.BusinessUnitNested"
                },
                "created_at": {
                    "type": "string"
                },
                "department": {
                    "$ref": "#/definitions/shared.DepartmentNested"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_title": {
                    "type": "string"
                },
                "line_manager": {
                    "$ref": "#/definitions/shared.LineManagerNested"
                },
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_phone": {
                    "type": "string"
                }
            }
        },
        "starter.UpdateStarterRequest": {
            "type": "object",
            "required": [
                "domain"
            ],
            "properties": {
                "department_id": {
                    "type": "integer"
                },
                "domain": {
                    "type": "string",
                    "maxLength": 25,
                    "minLength": 2
                },
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "job_title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "line_manager_id": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "work_phone": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Starter Service API",
	Description:      "REST APIs for managing starters and organizations.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
