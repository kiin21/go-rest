{
  "swagger": "2.0",
  "info": {
    "description": "REST APIs for managing starters and organizational resources.",
    "title": "Starter Service API",
    "contact": {},
    "version": "1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/business-units": {
      "get": {
        "description": "Retrieve business units with pagination",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business Units"
        ],
        "summary": "List business units",
        "parameters": [
          {
            "type": "integer",
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Items per page",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/business-units/{id}": {
      "get": {
        "description": "Retrieve a business unit with nested details by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business Units"
        ],
        "summary": "Get business unit detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Business unit ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "description": "Retrieve departments with optional filters",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "List departments",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter by business unit",
            "name": "business_unit_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Items per page",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new department",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "Create department",
        "parameters": [
          {
            "description": "Department payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.CreateDepartmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "description": "Retrieve a department with nested details by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "Get department detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Department ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a department by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "Delete department",
        "parameters": [
          {
            "type": "integer",
            "description": "Department ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update department information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "Update department",
        "parameters": [
          {
            "type": "integer",
            "description": "Department ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.UpdateDepartmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/departments/{id}/leader": {
      "patch": {
        "description": "Assign or update the leader of a department",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Departments"
        ],
        "summary": "Assign department leader",
        "parameters": [
          {
            "type": "integer",
            "description": "Department ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Leader assignment payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.AssignLeaderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/starters": {
      "get": {
        "description": "Retrieve starters with optional filters and pagination",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Starters"
        ],
        "summary": "List starters",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter by business unit",
            "name": "business_unit_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Filter by department",
            "name": "department_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Keyword search",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort field",
            "name": "sort_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort order",
            "name": "sort_order",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Items per page",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new starter record",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Starters"
        ],
        "summary": "Create a starter",
        "parameters": [
          {
            "description": "Starter payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_starter.CreateStarterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    },
    "/starters/{domain}": {
      "get": {
        "description": "Get a starter by domain",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Starters"
        ],
        "summary": "Get starter detail",
        "parameters": [
          {
            "type": "string",
            "description": "Starter domain",
            "name": "domain",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Soft delete a starter by domain",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Starters"
        ],
        "summary": "Delete starter",
        "parameters": [
          {
            "type": "string",
            "description": "Starter domain",
            "name": "domain",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Partially update a starter by domain",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Starters"
        ],
        "summary": "Update starter",
        "parameters": [
          {
            "type": "string",
            "description": "Starter domain",
            "name": "domain",
            "in": "path",
            "required": true
          },
          {
            "description": "Update payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_starter.UpdateStarterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_kiin21_go-rest_pkg_httputil.APIResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.AssignLeaderRequest": {
      "type": "object",
      "required": [
        "leader"
      ],
      "properties": {
        "leader": {
          "$ref": "#/definitions/github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.LeaderInfo"
        }
      }
    },
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.CreateDepartmentRequest": {
      "type": "object",
      "required": [
        "full_name",
        "shortname"
      ],
      "properties": {
        "business_unit_id": {
          "type": "integer"
        },
        "full_name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 3
        },
        "group_department_id": {
          "type": "integer"
        },
        "leader_id": {
          "type": "integer"
        },
        "shortname": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        }
      }
    },
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.LeaderInfo": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_department.UpdateDepartmentRequest": {
      "type": "object",
      "properties": {
        "business_unit_id": {
          "type": "integer"
        },
        "full_name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 3
        },
        "group_department_id": {
          "type": "integer"
        },
        "leader_id": {
          "type": "integer"
        },
        "shortname": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        }
      }
    },
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_starter.CreateStarterRequest": {
      "type": "object",
      "required": [
        "department_id",
        "domain",
        "email",
        "job_title",
        "mobile",
        "name",
        "work_phone"
      ],
      "properties": {
        "department_id": {
          "type": "integer"
        },
        "domain": {
          "type": "string",
          "maxLength": 25,
          "minLength": 3
        },
        "email": {
          "type": "string",
          "maxLength": 100
        },
        "job_title": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        },
        "line_manager_id": {
          "type": "integer"
        },
        "mobile": {
          "type": "string",
          "maxLength": 20,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 2
        },
        "work_phone": {
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "github_com_kiin21_go-rest_internal_organization_presentation_http_dto_starter.UpdateStarterRequest": {
      "type": "object",
      "required": [
        "domain"
      ],
      "properties": {
        "department_id": {
          "type": "integer"
        },
        "domain": {
          "type": "string",
          "maxLength": 25,
          "minLength": 2
        },
        "email": {
          "type": "string",
          "maxLength": 100
        },
        "job_title": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        },
        "line_manager_id": {
          "type": "integer"
        },
        "mobile": {
          "type": "string",
          "maxLength": 20,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 2
        },
        "work_phone": {
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "github_com_kiin21_go-rest_pkg_httputil.APIResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "data": {
          "description": "data return null not show"
        },
        "error": {
          "description": "Error return null not show"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
